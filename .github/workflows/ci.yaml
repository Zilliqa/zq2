name: ZQ2 CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  merge_group:
    types:
      - checks_requested

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  CARGO_TERM_COLOR: always
  RUST_TEST_THREADS: 4
  ZQ_TEST_TEMP_DIR: ${{ github.workspace }}/tmp
  ZQ_TEST_SAMPLES: 5

jobs:
  format:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "16"
      - run: npm install --save-dev prettier prettier-plugin-solidity solhint@5.0.4
      - run: npx prettier --write --plugin=prettier-plugin-solidity './**/*.sol'
      - run: npx solhint 'zilliqa/src/contracts/**/*.sol' --fix --noPrompt
      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Apply formatting changes to solidity files
          branch: ${{ github.head_ref }}
          add_options: "-u"
          file_pattern: "*.sol"
          status_options: "--untracked-files=no"
  check:
    runs-on: [self-hosted, gcp]
    steps:
      - name: Install Rust
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - run: rustup show active-toolchain
      - name: Install dependencies
        run: sudo add-apt-repository ppa:ethereum/ethereum && sudo apt update && sudo apt install -y solc build-essential pkg-config libssl-dev cmake protobuf-compiler
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Install default toolchain
        run: rustup toolchain install
      - name: Install nightly toolchain (for cargo fmt)
        run: rustup toolchain install nightly
      - uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo build --all-targets --all-features
      - name: Clippy
        run: cargo clippy --all --all-targets --all-features -- -D warnings
      # Run `cargo fmt` with nightly, because we use 'unstable' rustfmt features.
      - name: rustfmt
        run: cargo +nightly fmt --all --check
      - name: Test
        run: cargo test --tests --examples --bins --all-features
      - name: Verify working directory is clean
        run: git diff --exit-code
  e2e_test:
    services:
      scilla:
        image: asia-docker.pkg.dev/prj-p-devops-services-tvwmrf63/zilliqa-public/scilla:abdb24b1
        options: --init --entrypoint "/scilla/0/bin/scilla-server-http"
        ports:
          - 3000:3000
        volumes:
          - /tmp/scilla_ext_libs:/scilla_ext_libs
          - /tmp/scilla-state-server:/tmp/scilla-state-server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Fix mounted directory permissions
        run: sudo chmod 777 /tmp/scilla_ext_libs && sudo chmod 777 /tmp/scilla-state-server
      - name: Test connection to Scilla server
        run: curl http://localhost:3000
      - name: Install Rust
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - name: Install default toolchain
        run: rustup show active-toolchain || rustup toolchain install
      - uses: Swatinem/rust-cache@v2
      - name: JS test framework
        run: export PATH="/scilla/0/bin:$PATH" && ./scripts/js_test.sh
